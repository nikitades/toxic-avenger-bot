# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    _instanceof:
        Nikitades\ToxicAvenger\Infrastructure\Lemmatizer\LanguageBoundLemmatizerInterface:
            tags: ["lemmatizer.language_bound"]

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    Nikitades\ToxicAvenger\:
        resource: "../src/*"
        exclude:
            - "../src/App/Controller/"
            - "../src/Domain/Entity/"
            - "../src/Kernel.php"
            - "../src/Infrastructure/Doctrine/Migration/"

    Nikitades\ToxicAvenger\App\Controller\:
        resource: "../src/App/Controller/"
        tags: ["controller.service_arguments"]
        public: true

    Nikitades\ToxicAvenger\Domain\LemmatizerInterface:
        class: Nikitades\ToxicAvenger\Infrastructure\Lemmatizer\MultilingualLemmatizer
        arguments:
            - !tagged_iterator lemmatizer.language_bound

    Nikitades\ToxicAvenger\App\BusAwareTelegram:
        bind:
            $api_key: "%env(BOT_TOKEN)%"
            $bot_username: "%env(BOT_USERNAME)%"
        calls:
            - addCommandsPaths:
                  - - "%kernel.project_dir%/src/App/Telegram/Command"

    LanguageDetection\Language:
        arguments:
            - ["ru", "en"]

    php_doc_extractor:
        class: Symfony\Component\PropertyInfo\Extractor\PhpDocExtractor

    reflection_extractor:
        class: Symfony\Component\PropertyInfo\Extractor\ReflectionExtractor

    property_info_extractor:
        class: Symfony\Component\PropertyInfo\PropertyInfoExtractor
        bind:
            $typeExtractors: ["@php_doc_extractor", "@reflection_extractor"]

    GuzzleHttp\ClientInterface:
        class: GuzzleHttp\Client
        public: true

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
